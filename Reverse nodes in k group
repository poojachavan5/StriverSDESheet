class Solution {
    
    public static int length(ListNode head){
        ListNode curr=head;
        int len=0;
        while(curr!=null){
            curr=curr.next;
            len++;
        }
        return len;
    }
    
    static ListNode th=null;
    static ListNode tt=null;
    
    public static void addFirst(ListNode head){
        if(th==null){
            th=head;
            tt=head;
        }
        else{
            head.next=th;
            th=head;
        }
    }

    
    public ListNode reverseKGroup(ListNode head, int k) {
        if(head==null || head.next==null || k==0){
            return head;
        }
        ListNode oh=null;
        ListNode ot=null;
        int len=length(head);
        ListNode curr=head;
        while(len>=k){
            int tempK=k;
            while(tempK-- >0){
                ListNode f=curr.next;
                curr.next=null;
                addFirst(curr);
                curr=f;
            }
            if(oh==null){
                oh=th;
                ot=tt;
            }
            else{
                ot.next=th;
                ot=tt;
            } 
            th=null;
            tt=null;
            len-=k;
        }
        ot.next=curr;
        return oh;
        
    }
}
