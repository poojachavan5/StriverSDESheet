/*
    Time Complexity : O(N)
    Space Complexity : O(N)
    
    Where N is the length of the array.
*/

import java.util.Stack;

public class Solution {

    public static int[] nextGreater(int[] arr, int n) { 

        int[] ans = new int[n];

        Stack<Integer> s = new Stack<>();

        for (int i = n - 1; i >= 0; i--) {
            
            // We will pop the elements from the stack till we get the greater element 
            // Or stack become empty
            while (!s.isEmpty() && s.peek() <= arr[i]) {
                s.pop();
            }

            if (s.isEmpty()) {
                ans[i] = -1;
            } 
            else {
                ans[i] = s.peek();
            }

            s.push(arr[i]);
        }

        return ans;
    }

}
