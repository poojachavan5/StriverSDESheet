/*
    Time complexity: O(N)
    Space complexity: O(1)

    Where 'N' is the length of the array.
*/
import java.util.ArrayList;

public class Solution {
    public static int removeDuplicates(ArrayList<Integer> arr, int n) {
        // First pointer.
        int i = 0;

        // Second pointer traversing from 1 to n.
        for (int j = 1; j < n; j++) {
            // If not duplicates increment first pointer and check again
            if (!arr.get(j).equals(arr.get(j - 1))) {
                arr.set(i++, arr.get(j));
            }
        }
        // Return length == (index of first pointer when second reaches end) + 1.
        return i + 1;
    }
}
